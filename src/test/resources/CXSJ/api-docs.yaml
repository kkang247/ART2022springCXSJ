openapi: 3.0.3
info:
  title: "\u81F4\u65B0\u4E66\u9662\u8BA8\u8BBA\u95F4\u9884\u7EA6\u7CFB\u7EDF"
  version: '1.0'
servers:
- url: http://localhost:9999
  description: Inferred Url
tags:
- name: admin-controller
  description: Admin Controller
- name: black-list-controller
  description: Black List Controller
- name: booking-controller
  description: Booking Controller
- name: common-controller
  description: Common Controller
- name: dishonest-controller
  description: Dishonest Controller
- name: login-controller
  description: Login Controller
- name: room-controller
  description: Room Controller
- name: white-list-controller
  description: White List Controller
paths:
  /api/v1/admin/admin:
    get:
      tags:
      - admin-controller
      summary: getAdmin
      operationId: getAdminUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - admin-controller
      summary: addAdmin
      operationId: addAdminUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - admin-controller
      summary: deleteAdmin
      operationId: deleteAdminUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/admin/blacklist:
    get:
      tags:
      - black-list-controller
      summary: getAdmin
      operationId: getAdminUsingGET_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - black-list-controller
      summary: addBlackList
      operationId: addBlackListUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - black-list-controller
      summary: deleteAdmin
      operationId: deleteAdminUsingDELETE_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/admin/booking:
    put:
      tags:
      - booking-controller
      summary: modifyBookingStatus
      operationId: modifyBookingStatusUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBookingManagement'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/admin/booking/page:
    get:
      tags:
      - booking-controller
      summary: getBookingRecordByPage
      operationId: getBookingRecordByPageUsingGET
      parameters:
      - name: page
        in: query
        description: page
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: room
        in: query
        description: room
        required: false
        style: form
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/admin/booking/rating:
    put:
      tags:
      - booking-controller
      summary: rateBookingRecord
      operationId: rateBookingRecordUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBookingRating'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/common/booking:
    get:
      tags:
      - common-controller
      summary: getAvailableRecords
      operationId: getAvailableRecordsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - common-controller
      summary: addBookingRecord
      operationId: addBookingRecordUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBookingRecord'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - common-controller
      summary: cancelBooking
      operationId: cancelBookingUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBookingRecordID'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/common/mybooking:
    get:
      tags:
      - common-controller
      summary: getMyBooking
      operationId: getMyBookingUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/common/room:
    get:
      tags:
      - common-controller
      summary: getRooms
      operationId: getRoomsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/admin/dishonest:
    get:
      tags:
      - dishonest-controller
      summary: getAllDishonest
      operationId: getAllDishonestUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - dishonest-controller
      summary: modifyRecord
      operationId: modifyRecordUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DishonestPerson'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - dishonest-controller
      summary: addDishonest
      operationId: addDishonestUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - dishonest-controller
      summary: deleteDishonest
      operationId: deleteDishonestUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/currentUser:
    get:
      tags:
      - login-controller
      summary: getCurrentUserInfo
      operationId: getCurrentUserInfoUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/login:
    post:
      tags:
      - login-controller
      summary: login
      operationId: loginUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/admin/room:
    get:
      tags:
      - room-controller
      summary: getRooms
      operationId: getRoomsUsingGET_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - room-controller
      summary: modifyRoom
      operationId: modifyRoomUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRoom'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - room-controller
      summary: addRoom
      operationId: addRoomUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRoom'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - room-controller
      summary: deleteAdmin
      operationId: deleteAdminUsingDELETE_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRoom'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/admin/add_many:
    post:
      tags:
      - white-list-controller
      summary: add_many
      operationId: add_manyUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/R_many'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/admin/whitelist:
    get:
      tags:
      - white-list-controller
      summary: getAllWhiteList
      operationId: getAllWhiteListUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - white-list-controller
      summary: addWhiteList
      operationId: addWhiteListUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - white-list-controller
      summary: deleteWhiteList
      operationId: deleteWhiteListUsingDELETE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    DishonestPerson:
      title: DishonestPerson
      type: object
      properties:
        times:
          type: integer
          format: int32
        username:
          type: string
    LoginUser:
      title: LoginUser
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    Person:
      title: Person
      type: object
      properties:
        username:
          type: string
    R_many:
      title: R_many
      type: object
      properties:
        first_four:
          type: string
    RequestBookingManagement:
      title: RequestBookingManagement
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - AVAILABLE
          - FINISH
          - PENDING
    RequestBookingRating:
      title: RequestBookingRating
      type: object
      properties:
        id:
          type: integer
          format: int64
        rating:
          type: string
          enum:
          - ABSENCE
          - DAMAGE
          - NONE
          - NORMAL
          - RUBBISH
    RequestBookingRecord:
      title: RequestBookingRecord
      type: object
      properties:
        end:
          type: integer
          format: int64
        roomID:
          type: integer
          format: int64
        roomName:
          type: string
        start:
          type: integer
          format: int64
        usage:
          type: string
        username:
          type: string
    RequestBookingRecordID:
      title: RequestBookingRecordID
      type: object
      properties:
        id:
          type: integer
          format: int64
    RequestRoom:
      title: RequestRoom
      type: object
      properties:
        capability:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        priority:
          type: string
          enum:
          - LOW
          - NORMAL
        roomName:
          type: string
        status:
          type: string
          enum:
          - CLOSE
          - OPEN
